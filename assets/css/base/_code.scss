pre,
code,
span[class='code'] {
    // font-family: 'Source Code Pro', monospace;
    // font-family: 'Fira Mono', monospace;
    font-family: $font-2;
    font-size: inherit;
    font-kerning: none;
    // font-weight: 500;
    font-weight: 400;
    line-height: 1.5;
}

pre {
    position: relative;
    font-size: 0.875rem;
    padding: 2em;
    margin: fs('xxl') auto;
    max-width: 100%;
    max-height: 75vh;
    background: rgba(#d8dce3, 0.4);
    border-radius: 0.375em;
    overflow-x: auto;
    overflow-y: auto;
    white-space: normal;

    html[theme='dark'] & {
        background: rgba(#0a0d0f, 0.4);
    }

    @include mq('tablet') {
        font-size: 1rem;
    }

    // &::-webkit-scrollbar {
    //     display: none;
    // }
    // -ms-overflow-style: none;
    // scrollbar-width: none;

    @media (hover: hover) and (pointer: fine) {
        &::-webkit-scrollbar {
            width: 9px;
            height: 9px;
            background-color: transparent;
        }
        &::-webkit-scrollbar-track {
            border-radius: 3px;
            padding: 1px;
            background-color: transparent;
        }
        &::-webkit-scrollbar-corner {
            background: none;
        }
        &::-webkit-scrollbar-thumb {
            border-radius: 5px;
            background-color: transparent;
            opacity: 0.5;
            border: 2px solid rgba(0, 0, 0, 0);
            background-clip: padding-box;
            transition: background-color 0.3s ease;
        }
        &::-webkit-scrollbar-thumb:window-inactive {
            background-color: transparent;
        }

        &:hover,
        &:focus,
        &:focus-within {
            &::-webkit-scrollbar-thumb {
                background-color: c('base-4');
            }
        }
    }

    code {
        color: c('base-5');
        line-height: 1.5;
        white-space: pre;
        word-spacing: normal;
        word-break: normal;
        word-wrap: normal;
        tab-size: 4;
        hyphens: none;
        overflow: auto;
        padding: 0;
        background: transparent;

        html[theme='dark'] & {
            color: c('base-2');
        }
    }

    .token {
        &.variable {
            //color: tomato;
        }

        &.property,
        &.tag,
        &.boolean,
        &.number,
        &.function-name,
        &.symbol,
        &.deleted {
            color: #f7768e;
            color: darken(#f7768e, 25%);

            html[theme='dark'] & {
                color: #f7768e;
            }
        }

        &.selector,
        &.attr-name,
        &.string,
        &.char,
        &.function,
        &.builtin,
        &.inserted {
            color: #73daca;
            color: darken(#73daca, 25%);

            html[theme='dark'] & {
                color: #73daca;
            }
        }

        &.atrule,
        &.attr-value,
        &.keyword,
        &.class-name {
            color: #89ddff;
            color: darken(#89ddff, 25%);

            html[theme='dark'] & {
                color: #89ddff;
            }
        }

        &.punctuation {
            color: #b267e6;
            color: darken(#b267e6, 25%);

            html[theme='dark'] & {
                color: #b267e6;
            }
        }

        &.string {
            color: #ffdb69;
            color: darken(#ffdb69, 25%);

            html[theme='dark'] & {
                color: #ffdb69;
            }
        }

        &.comment {
            color: #444b6a;
        }
    }
}

span[class='code'] {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.3em 0.45em;
    color: c('secondary-base');
    vertical-align: middle;
    font-weight: 500;
    font-size: 0.75rem;

    @include mq('tablet') {
        @include fs-mini;
    }

    + span[class='code'] {
        margin-left: 0.25em;
    }

    html[theme='dark'] & {
        color: c('backgroundOpacity');
    }

    a {
        color: c('backgroundOpacity');
        transition: 0.3s ease;

        html[theme='dark'] & {
            color: c('backgroundOpacity');
        }

        &:hover {
            color: c('primary-light');

            html[theme='dark'] & {
                color: c('primary-light');
            }
        }
    }
}

p span[class='code'] {
    word-break: break-all;
}
